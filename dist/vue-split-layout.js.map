{"version":3,"file":"vue-split-layout.js","sources":["../src/Split.vue","../src/Tree.js","../src/Layout.vue","../src/Pane.vue"],"sourcesContent":["<template>\r\n  <div :class=\"splitClass\">\r\n    <div class=\"content\" :style=\"{ 'flex-basis': state.split }\">\r\n      <slot name=\"first\"></slot>\r\n    </div>\r\n    <div class=\"splitter\" @mousedown=\"startResize\"></div>\r\n    <div class=\"content\">\r\n      <slot name=\"second\"></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Split',\r\n  props: {\r\n    resizeable: { type: Boolean, default: false },\r\n    dir: { type: String, default: 'horizontal' },\r\n    split: { type: String, default: '50%' }\r\n  },\r\n  data() {\r\n    return {\r\n      state: {\r\n        resizing: false,\r\n        split: this.split\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    splitClass() {\r\n      return [\r\n        'split',\r\n        this.dir,\r\n        this.state.resizing ? 'resizing' : '',\r\n        this.resizeable ? 'resizeable' : ''\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    startResize(event) {\r\n      if (!this.resizeable || event.button !== 0) return\r\n      event.preventDefault()\r\n      this.state.resizing = true\r\n      const drag = (e) => {\r\n        const horizontal = this.dir === 'horizontal'\r\n        const splitterSize = (horizontal ? this.$el.children[1].clientWidth : this.$el.children[1].clientHeight) / 2\r\n        const parentRect = this.$el.getBoundingClientRect()\r\n        const newSize = horizontal\r\n          ? (e.clientX - parentRect.left - splitterSize) / this.$el.clientWidth * 100\r\n          : (e.clientY - parentRect.top - splitterSize) / this.$el.clientHeight * 100\r\n        this.state.split = newSize + '%'\r\n      }\r\n      const stopResize = () => {\r\n        this.state.resizing = false\r\n        document.removeEventListener('mousemove', drag)\r\n        document.removeEventListener('mouseup', stopResize)\r\n      }\r\n      document.addEventListener('mousemove', drag)\r\n      document.addEventListener('mouseup', stopResize)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.split {\r\n  display: flex;\r\n  height: 100%;\r\n}\r\n\r\n.content {\r\n  flex: 1;\r\n  overflow: hidden;\r\n}\r\n\r\n.splitter {\r\n  flex-basis: 6px;\r\n  background: #ccc;\r\n}\r\n\r\n.horizontal {\r\n  flex-direction: row;\r\n}\r\n\r\n.vertical {\r\n  flex-direction: column;\r\n}\r\n\r\n.resizeable.horizontal .splitter {\r\n  cursor: col-resize;\r\n}\r\n\r\n.resizeable.vertical .splitter {\r\n  cursor: row-resize;\r\n}\r\n</style>\r\n","export default class Tree {\r\n  static gid = 0\r\n  constructor(tree) {\r\n    this.tree = tree || []\r\n  }\r\n  push(node) {\r\n    if (node.id === undefined) {\r\n      node.id = Tree.gid++\r\n    }\r\n    this.tree.push(node)\r\n    return node\r\n  }\r\n  findById(nodeId) {\r\n    return this.tree.find(n => n.id === nodeId)\r\n  }\r\n  childrenOf(parent) {\r\n    return this.tree.filter(k => k.parent === parent)\r\n  }\r\n  attachChild(target, position, child, size) {\r\n    if (child.id === undefined) {\r\n      child.id = Tree.gid++\r\n    }\r\n    size = size || 33\r\n    const targetIndex = this.tree.indexOf(target)\r\n    const newSplit = {\r\n      id: Tree.gid++,\r\n      type: 'split',\r\n      parent: target.parent,\r\n      dir: position % 2 === 0 ? 'vertical' : 'horizontal'\r\n    }\r\n    target.parent = newSplit\r\n    child.parent = newSplit\r\n    this.tree[targetIndex] = newSplit\r\n    if (position === 0 || position === 3) {\r\n      newSplit.split = size + '%'\r\n      this.tree.push(child, target)\r\n    } else {\r\n      newSplit.split = (100 - size) + '%'\r\n      this.tree.push(target, child)\r\n    }\r\n    return child\r\n  }\r\n}\r\nTree.from = function (tree) {\r\n  return new Tree(tree)\r\n}\r\n","<template>\r\n  <div :class=\"layoutClass\" ref=\"container\">\r\n    <div class=\"views\" :class=\"{ dragging: !!drag }\" ref=\"views\">\r\n      <component v-for=\"node in childrenOf(nodes[0])\" :is=\"renderNode(node)\" :key=\"node.id\" />\r\n    </div>\r\n    <div class=\"preview\" ref=\"preview\"></div>\r\n    <div :class=\"{ 'drag': true, dragging: !!drag }\" ref=\"drag\">\r\n      <div class=\"view\" v-if=\"drag\" :target-view=\"'view-' + drag.node.viewId\"></div>\r\n    </div>\r\n    <div style=\"display: none\">\r\n      <slot />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Split from './Split.vue'\r\nimport Tree from './tree'\r\n\r\nexport default {\r\n  name: 'Layout',\r\n  props: {\r\n    edit: { type: Boolean, default: true },\r\n    resize: { type: Boolean, default: true },\r\n    splits: { type: [String, Number, Object], default: () => ({}) }\r\n  },\r\n  data() {\r\n    return {\r\n      nodes: this.calcSplits(),\r\n      drag: null,\r\n      savedNodes: null\r\n    }\r\n  },\r\n  watch: {\r\n    splits() {\r\n      this.nodes = this.calcSplits()\r\n    }\r\n  },\r\n  beforeUpdate() {\r\n    if (!this.$refs.container) return\r\n    const els = this.$refs.container.querySelectorAll('[target-view]')\r\n    Array.from(els).forEach((e) => {\r\n      const el = this.$refs.container.querySelector(`[src-view=${e.getAttribute('target-view')}]`)\r\n      if (el && el.children[0]) {\r\n        el.appendChild(e.children[0])\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    calcSplits() {\r\n      const root = []\r\n      const tree = Tree.from(root)\r\n      const walk = (node) => {\r\n        if (node instanceof Object) {\r\n          const split = tree.push({ type: 'split', dir: node.dir, split: node.split })\r\n          walk(node.first).parent = split\r\n          walk(node.second).parent = split\r\n          return split\r\n        }\r\n        return tree.push({ type: 'view', viewId: node })\r\n      }\r\n      walk(this.splits)\r\n      return root\r\n    },\r\n    childrenOf(parent) {\r\n      return Tree.from(this.nodes).childrenOf(parent)\r\n    },\r\n    renderNode(node) {\r\n      if (node.type === 'split') {\r\n        return Split\r\n      } else {\r\n        return 'div'\r\n      }\r\n    },\r\n    onSplitResize(event, split, size) {\r\n      const nodeId = split.props['node-id']\r\n      const node = Tree.from(this.nodes).findById(nodeId)\r\n      node.split = size\r\n    },\r\n    previewPane(attach, targetDom, amount) {\r\n      if (attach === -1) {\r\n        this.$refs.preview.style.opacity = 0\r\n        return\r\n      }\r\n      if (!targetDom) return -1\r\n      amount = amount || 33\r\n      const size = amount / 100\r\n      const targetRect = targetDom.getBoundingClientRect()\r\n      const previewPos = {\r\n        left: targetRect.left,\r\n        top: targetRect.top,\r\n        width: targetRect.width,\r\n        height: targetRect.height\r\n      }\r\n      if (attach === 1) {\r\n        previewPos.left += previewPos.width - previewPos.width * size\r\n      } else if (attach === 2) {\r\n        previewPos.top += previewPos.height - previewPos.height * size\r\n      }\r\n      if (attach % 2 === 0) {\r\n        previewPos.height *= size\r\n      } else {\r\n        previewPos.width *= size\r\n      }\r\n      this.$refs.preview.style.opacity = 1\r\n      for (const key in previewPos) {\r\n        this.$refs.preview.style[key] = `${previewPos[key]}px`\r\n      }\r\n    },\r\n    onViewDragStart(e) {\r\n      if (e.button !== 0) return\r\n      const nodeIdAttr = e.target.hasAttribute('node-id')\r\n      const dragAttr = e.target.hasAttribute('pane-drag')\r\n      if (!nodeIdAttr && !dragAttr) return\r\n      let el = e.target\r\n      if (!nodeIdAttr) {\r\n        let viewDom = el\r\n        while (viewDom && viewDom.matches && !viewDom.hasAttribute('node-id')) {\r\n          viewDom = viewDom.parentNode\r\n        }\r\n        if (!viewDom || !viewDom.matches) return\r\n        el = viewDom\r\n      }\r\n      const nodeId = parseInt(el.getAttribute('node-id'), 10)\r\n      const node = this.nodes.find((n) => n.id === nodeId)\r\n      if (!node) return\r\n\r\n      e.preventDefault()\r\n      const containerRect = this.$refs.container.getBoundingClientRect()\r\n      const trect = e.target.getBoundingClientRect()\r\n\r\n      this.drag = { node, offset: { x: e.clientX - trect.left, y: e.clientY - trect.top } }\r\n      this.savedNodes = structuredClone(this.nodes) // Using structuredClone for deep cloning\r\n      Tree.from(this.nodes).removeChild(node)\r\n\r\n      this.$refs.drag.style.top = `${trect.y - containerRect.top}px`\r\n      this.$refs.drag.style.left = `${trect.x - containerRect.left}px`\r\n      this.$refs.drag.style.width = `${trect.width}px`\r\n      this.$refs.drag.style.height = `${trect.height}px`\r\n\r\n      document.addEventListener('mousemove', this.onViewDrag)\r\n      document.addEventListener('mouseup', this.onViewDrop)\r\n    },\r\n    onViewDrag(e) {\r\n      if (e.button !== 0) return\r\n      const containerRect = this.$refs.container.getBoundingClientRect()\r\n      const rel = {\r\n        x: e.clientX - containerRect.left,\r\n        y: e.clientY - containerRect.top\r\n      }\r\n      this.$refs.drag.style.left = `${rel.x - this.drag.offset.x}px`\r\n      this.$refs.drag.style.top = `${rel.y - this.drag.offset.y}px`\r\n      this.$refs.drag.style.pointerEvents = 'none'\r\n      const el = document.elementFromPoint(e.clientX, e.clientY)\r\n      this.$refs.drag.style.pointerEvents = null\r\n\r\n      let viewDom = el\r\n      while (viewDom && !viewDom.matches('.view')) {\r\n        viewDom = viewDom.parentNode\r\n      }\r\n      if (!viewDom || !viewDom.matches) {\r\n        this.previewPane(-1)\r\n        return\r\n      }\r\n\r\n      const attach = this.checkAttach(viewDom, e)\r\n      if (attach !== -1) {\r\n        this.drag.over = { viewDom, attach }\r\n      }\r\n      this.previewPane(attach, viewDom)\r\n    },\r\n    onViewDrop(e) {\r\n      if (e.button !== 0) return\r\n      document.removeEventListener('mousemove', this.onViewDrag)\r\n      document.removeEventListener('mouseup', this.onViewDrop)\r\n\r\n      this.previewPane(-1)\r\n      if (!this.drag.over) {\r\n        this.drag = null\r\n        this.nodes = this.savedNodes\r\n        return\r\n      }\r\n\r\n      const { viewDom, attach } = this.drag.over\r\n      const nodeId = parseInt(viewDom.getAttribute('node-id'), 10)\r\n      const tree = Tree.from(this.nodes)\r\n      const node = tree.findById(nodeId)\r\n      tree.attachChild(node, attach, this.drag.node)\r\n      this.drag = null\r\n    },\r\n    checkAttach(targetDom, e, amount = 33) {\r\n      const size = amount / 100\r\n      const trect = targetDom.getBoundingClientRect()\r\n      const tW = trect.width * size\r\n      const tH = trect.height * size\r\n      const rPos = { x: e.clientX - trect.left, y: e.clientY - trect.top }\r\n\r\n      const pos = [\r\n        rPos.y - tH,\r\n        (trect.width - tW) - rPos.x,\r\n        (trect.height - tH) - rPos.y,\r\n        rPos.x - tW\r\n      ]\r\n      let min = 0\r\n      let minI = -1\r\n      pos.forEach((v, i) => {\r\n        if (v < min) {\r\n          min = v\r\n          minI = i\r\n        }\r\n      })\r\n      return minI\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.layout-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 0 auto;\r\n  overflow: hidden;\r\n  position: relative;\r\n  height: 100%;\r\n}\r\n\r\n.views.dragging {\r\n  opacity: 0.7;\r\n}\r\n\r\n.preview {\r\n  position: absolute;\r\n  opacity: 0;\r\n}\r\n\r\n.drag {\r\n  display: none;\r\n}\r\n\r\n.drag.dragging {\r\n  display: block;\r\n}\r\n\r\n.view {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>\r\n","<template>\r\n  <div class=\"pane\">\r\n    <div class=\"header\">{{ title }}</div>\r\n    <div class=\"content\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Pane',\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pane {\r\n  position: relative;\r\n  overflow: hidden;\r\n  flex: 1 1 auto;\r\n  height: 100%;\r\n  width: 100%;\r\n  flex-direction: column;\r\n}\r\n\r\n.header {\r\n  height: 40px;\r\n  padding: 10px;\r\n  background-color: #f0f0f0;\r\n  user-select: none;\r\n}\r\n\r\n.content {\r\n  position: absolute;\r\n  top: 40px;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  overflow: auto;\r\n}\r\n</style>\r\n"],"names":["_sfc_main","event","drag","e","horizontal","splitterSize","parentRect","newSize","stopResize","_hoisted_1","_createElementBlock","_normalizeClass","$options","_createElementVNode","_normalizeStyle","$data","_renderSlot","_ctx","args","_Tree","tree","node","nodeId","n","parent","k","target","position","child","size","targetIndex","newSplit","__publicField","Tree","els","el","root","walk","split","Split","attach","targetDom","amount","targetRect","previewPos","key","nodeIdAttr","dragAttr","viewDom","containerRect","trect","rel","tW","tH","rPos","pos","min","minI","v","i","_hoisted_2","_hoisted_3","_openBlock","_Fragment","_renderList","_createBlock","_resolveDynamicComponent","_createCommentVNode","_toDisplayString","$props"],"mappings":"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"}